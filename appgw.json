{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationGatewayName": {
      "type": "string"
    },
    "subnet1Ref": {
      "type": "string"
    },
    "publicIPRef": {
      "type": "string"
    },
    "fe_port_name": {
      "type": "string"
    },
    "fe_port": {
      "type": "string"
    },
    "setting_name": {
      "type": "string"
    },
    "listener_name": {
      "type": "string"
    },
    "url_path_map": {
      "type": "string"
    },
    "rule_name": {
      "type": "string"
    },
    "name": {
      "type": "string"
    },
    "probe_name": {
      "type": "string"
    },
    "probe_path": {
      "type": "string"
    }
  },
  "variables": {
  },
  "resources": [
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2019-06-01",
      "name": "[parameters('applicationGatewayName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('subnet1Ref')]"
              }
            }
          }
        ],
        "sslCertificates": [],
        "trustedRootCertificates": [],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[parameters('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "[parameters('fe_port_name')]",
            "properties": {
              "port": "[parameters('fe_port')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "bepool",
            "properties": {
              "backendAddresses": []
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "[parameters('setting_name')]",
            "properties": {
              "port": "[parameters('fe_port')]",
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "requestTimeout": 30
            }
          }
        ],
        "httpListeners": [
          {
            "name": "[parameters('listener_name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/', parameters('fe_port_name'))]"
              },
              "protocol": "Http",
              "requireServerNameIndication": false
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "[parameters('url_path_map')]",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/bepool')]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/', parameters('setting_name'))]"
              },
              "pathRules": [
                {
                  "name": "[parameters('rule_name')]",
                  "properties": {
                    "paths": [
                      "[concat('/',parameters('name'),'/*')]"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/bepool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/', parameters('setting_name'))]"
                    }
                  }
                }
              ]
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "[parameters('rule_name')]",
            "properties": {
              "ruleType": "PathBasedRouting",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/', parameters('listener_name'))]"
              },
              "urlPathMap": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/urlPathMaps/', parameters('url_path_map'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[parameters('probe_name')]",
            "properties": {
              "protocol": "Http",
              "path": "[parameters('probe_path')]",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          }
        ],
        "rewriteRuleSets": [],
        "redirectConfigurations": [],
        "enableHttp2": false,
        "autoscaleConfiguration": {
          "minCapacity": 2,
          "maxCapacity": 5
        }
      }
    }
  ]
}